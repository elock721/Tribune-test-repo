
defaults:
  run:
    # establish working directory
    working-directory: tribune_apiandmvc


# break down of tasks
jobs:
  build:
    name: building
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: dotnet restore ./aspnet_api_store/
      - run: dotnet build ./aspnet_api_store/
      - run: dotnet restore ./aspnet_mvc/
      - run: dotnet build ./aspnet_mvc/

  # test:
  #   needs: build
  #   runs-on: ubuntu-20.04
  #   steps:
  #     # selects an action
  #     - uses: actions/checkout@v2
  #     - run: dotnet test ./asp_api_store/
  #     - run: dotnet test ./aspnet_mvc/

  # analyze:
  #   needs: [build, test]
  #   runs-on: ubuntu-20.04
  #   env:
  #     SONARCLOUD_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
  #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     # runs a command line command
  #     - run: dotnet tool install --global dotnet-sonarscanner
  #     - run: |
  #         dotnet sonarscanner begin /k:'2012-14-dotnet_week-4' /o:'2012-14-dotnet' /d:sonar.host.url='https://sonarcloud.io/' /d:sonar.login=$SONARCLOUD_TOKEN
  #         dotnet build
  #         dotnet test -p:CollectCoverage=true -p:CoverletOutputFormat=opencover --logger=trx
  #         dotnet sonarscanner end /d:sonar.login=$SONARCLOUD_TOKEN

  pack:
    # needs:
    #   - build
    #   - test
      # - analyze
    runs-on: ubuntu-20.04
    env:
      DOCKER_TOKEN: ${{ secrets.DOCKER_SECRET_TEST }}
      DOCKER_USER: ${{ secrets.DOCKER_USER_TEST }}
    steps:
      - uses: actions/checkout@v2
      - run: echo $DOCKER_TOKEN | docker login -u $DOCKER_USER --password-stdin
      - run: docker image build -f aspnet_api_store/dockerfile -t tribuneapi .
      - run: docker image tag tribuneapi elock721/tribunetest:tribuneapi
      - run: docker image push elock721/tribunetest:tribuneapi
      - run: docker image build -f aspnet_mvc/dockerfile -t tribunemvc .
      - run: docker image tag tribunemvc elock721/tribunetest:tribunemvc
      - run: docker image push elock721/tribunetest:tribunemvc
      - run: docker logout







      # establish working directory



  # deploy:
  #   needs: pack
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: azure/webapps-deploy@v2
  #       with:
  #         app name: tribunetest:v5
  #         images: elock721/tribunetest:v5


on: push

